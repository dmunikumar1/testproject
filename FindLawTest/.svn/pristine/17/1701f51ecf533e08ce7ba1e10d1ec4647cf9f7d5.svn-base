package tr.findlaw.tests;

import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;
import org.testng.annotations.Test;
import com.framework.reports.TestNGCustomReporter;
import com.framework.utils.ExcelUtils;
import tr.findlaw.basetest.FindlawBaseTest;
import tr.findlaw.pages.Accountpage;
import tr.findlaw.pages.AddProductsPage;
import tr.findlaw.pages.Contact28Page;
import tr.findlaw.pages.ContactsPage;
import tr.findlaw.pages.EsignProcessPage;
import tr.findlaw.pages.FindLawOrderToolPage;
import tr.findlaw.pages.GenerateDocumentPage;
import tr.findlaw.pages.OpptyPage;
import tr.findlaw.pages.QuotePage;
import tr.findlaw.pages.SearchQuotePage;
import tr.findlaw.pages.SendEsignPage;
import tr.findlaw.pages.ValidateEsignPage;

public class Sprint_14 extends FindlawBaseTest{

	private Logger logger = LogManager.getLogger(this.getClass());
	
	
	 @Test(enabled = false, description = "SOC-5538 Within the Cart, update the Adjustment Type options for FindLaw")
	  public void SOC_5538() {
	  TestNGCustomReporter.log(logger,"======================== Login Page script execution started ========================");
     applicationLogin();
    /* TestNGCustomReporter.log(logger,"======================== Accountpage script execution started ========================");
     accountpage = new Accountpage(driver);
     int ctrl1=11;
     accountpage.SearchAccount(ctrl1)*/;
    /* TestNGCustomReporter.log(logger,"======================== Create New Contact script execution started ========================");
     contactsPage = new ContactsPage(driver);
     //String ContactName= contactsPage.createNewContact();
     String ContactName=  ExcelUtils.getDataByColumnName("Contacts", "Id");
    contactsPage.SearchExistContact();
    //String ContactName= ExcelUtils.getDataByColumnName("Contacts", "Id");
     TestNGCustomReporter.log(logger,"======================== Create New Oppty script execution started ========================");
     OpptyPage optypage = new OpptyPage(driver);
    optypage.createOpty(); 
     TestNGCustomReporter.log(logger,"======================== Create Quote page script execution started ========================");
     quotepage = new QuotePage(driver);
     String QuoteId=quotepage.createQuote();
     TestNGCustomReporter.log(logger,
				"======================== Add Product page script execution started ========================");
		addproductspage = new AddProductsPage(driver);
		int ctrl = 44; // If ctrl = 14 then execute the Add bridge for the product in cart page
		addproductspage.AddProducts(ctrl); 
		TestNGCustomReporter.log(logger,
				"======================== Contact28 page script execution started ========================");
		contact28page = new Contact28Page(driver);
		contact28page.AddContact28(ContactName);
		// String ProposalName=ExcelUtils.getDataByColumnName("Quote", "Name");
		searchquotepage = new SearchQuotePage(driver);
		searchquotepage.SearchQuote(QuoteId);
		TestNGCustomReporter.log(logger,
				"======================== Generate Document page script execution started ========================");
		generateDocumentPage = new GenerateDocumentPage(driver);
		generateDocumentPage.Generate_Document();
		TestNGCustomReporter.log(logger,
				"======================== Send For Esign page script execution started ========================");
		sendesignPage = new SendEsignPage(driver);
		sendesignPage.Send_For_Esign();
		webmailLogin();
		TestNGCustomReporter.log(logger,
				"========================  Esign Process page script execution started ========================");
		esignprocesspage = new EsignProcessPage(driver);
		esignprocesspage.EsignProcess();
		TestNGCustomReporter.log(logger,
				"======================== SFDC Login script execution started ========================");
		applicationLogin();*/
     	String QuoteId=  ExcelUtils.getDataByColumnName("Quote", "Name");
		TestNGCustomReporter.log(logger,
				"========================  Esign Process page script execution started ========================");
		searchquotepage = new SearchQuotePage(driver);
		searchquotepage.SearchQuote(QuoteId);
		/*TestNGCustomReporter.log(logger,
				"========================  Esign Process page script execution started ========================");
		validateesignpage = new ValidateEsignPage(driver);
		validateesignpage.ValidateEsign();*/
		TestNGCustomReporter.log(logger,
				"========================  Click COB page script executution started ========================");
		findlawordertoolpage = new FindLawOrderToolPage(driver);
		findlawordertoolpage.clickCOBbutton();
		TestNGCustomReporter.log(logger,
				"========================  Login to Safe Page execution started ========================");
		findlawordertoolpage.loginWithSafeuserId(QuoteId);
		TestNGCustomReporter.log(logger,
				"========================  COB process page script executution started ========================");
		int ctrlval = 18;
		findlawordertoolpage.COBProcess(ctrlval);
		applicationLogin();
		TestNGCustomReporter.log(logger,
				"========================  Search for Quote script execution started ========================");
		searchquotepage = new SearchQuotePage(driver);
		searchquotepage.SearchQuote(QuoteId);
		validateesignpage = new ValidateEsignPage(driver);
		TestNGCustomReporter.log(logger,
				"========================  Validate Order Script Execution started ========================");
		validateesignpage.ValidateOrder();   
		 
	 }
	 	/*
	 	 * Add both IMS and IME product to the cart and validate the submit for Approval and Finalize buttons
	 	 * 
	 	 */
	
	 @Test(enabled = false, description = "SOC-5900 Implement approval rule for 1 year contract term for IMS and IME for new products")
	  public void SOC_5900() {
	  TestNGCustomReporter.log(logger,"======================== Login Page script execution started ========================");
	  applicationLogin();
	   TestNGCustomReporter.log(logger,"======================== Accountpage script execution started ========================");
	   /* accountpage = new Accountpage(driver);
	    int ctrl1=11;
	    accountpage.SearchAccount(ctrl1);*/
	  /* TestNGCustomReporter.log(logger,"======================== Create New Contact script execution started ========================");
	    contactsPage = new ContactsPage(driver);
	    //String ContactName= contactsPage.createNewContact();
	    String ContactName=  ExcelUtils.getDataByColumnName("Contacts", "Id");
	   contactsPage.SearchExistContact();
	    TestNGCustomReporter.log(logger,"======================== Create New Oppty script execution started ========================");
	    OpptyPage optypage = new OpptyPage(driver);
	   optypage.createOpty(); 
	    TestNGCustomReporter.log(logger,"======================== Create Quote page script execution started ========================");
	    quotepage = new QuotePage(driver);
	    String QuoteId=quotepage.createQuote();
	    TestNGCustomReporter.log(logger,
				"======================== Add Product page script execution started ========================");
		addproductspage = new AddProductsPage(driver);
		int ctrl = 47; // If ctrl = 14 then execute the Add bridge for the product in cart page
		addproductspage.AddProducts(ctrl); 
		TestNGCustomReporter.log(logger,
				"======================== Contact28 page script execution started ========================");
		contact28page = new Contact28Page(driver);
		contact28page.AddContact28(ContactName);
		// String ProposalName=ExcelUtils.getDataByColumnName("Quote", "Name");
		searchquotepage = new SearchQuotePage(driver);
		searchquotepage.SearchQuote(QuoteId);
		TestNGCustomReporter.log(logger,
				"======================== Generate Document page script execution started ========================");
		generateDocumentPage = new GenerateDocumentPage(driver);
		generateDocumentPage.Generate_Document();
		TestNGCustomReporter.log(logger,
				"======================== Send For Esign page script execution started ========================");
		sendesignPage = new SendEsignPage(driver);
		sendesignPage.Send_For_Esign();
		webmailLogin();
		TestNGCustomReporter.log(logger,
				"========================  Esign Process page script execution started ========================");
		esignprocesspage = new EsignProcessPage(driver);
		esignprocesspage.EsignProcess();
		TestNGCustomReporter.log(logger,
				"======================== SFDC Login script execution started ========================");
		applicationLogin();*/
    	String QuoteId= ExcelUtils.getDataByColumnName("Quote", "Name");
		TestNGCustomReporter.log(logger,
				"========================  Esign Process page script execution started ========================");
		searchquotepage = new SearchQuotePage(driver);
		searchquotepage.SearchQuote(QuoteId);
		/*TestNGCustomReporter.log(logger,
				"========================  Esign Process page script execution started ========================");
		validateesignpage = new ValidateEsignPage(driver);
		validateesignpage.ValidateEsign();*/
		TestNGCustomReporter.log(logger,
				"========================  Click COB page script executution started ========================");
		findlawordertoolpage = new FindLawOrderToolPage(driver);
		findlawordertoolpage.clickCOBbutton();
		TestNGCustomReporter.log(logger,
				"========================  Login to Safe Page execution started ========================");
		findlawordertoolpage.loginWithSafeuserId(QuoteId);
		TestNGCustomReporter.log(logger,
				"========================  COB process page script executution started ========================");
		int ctrlval = 19;
		findlawordertoolpage.COBProcess(ctrlval);
		applicationLogin();
		TestNGCustomReporter.log(logger,
				"========================  Search for Quote script execution started ========================");
		searchquotepage = new SearchQuotePage(driver);
		searchquotepage.SearchQuote(QuoteId);
		validateesignpage = new ValidateEsignPage(driver);
		TestNGCustomReporter.log(logger,
				"========================  Validate Order Script Execution started ========================");
		validateesignpage.ValidateOrder();   
		 
	 }
	
	 //need to execute script- waiting for account with assets as IMS or IME
	 @Test(enabled = false, description = "SOC-5900 Implement approval rule for 1 year contract term for IMS and IME for new products")
	  public void SOC_5900_Renew() {
	  TestNGCustomReporter.log(logger,"======================== Login Page script execution started ========================");
	  applicationLogin();
	   TestNGCustomReporter.log(logger,"======================== Accountpage script execution started ========================");
	   /* accountpage = new Accountpage(driver);
	    int ctrl1=11;
	    accountpage.SearchAccount(ctrl1);*/
	   TestNGCustomReporter.log(logger,"======================== Create New Contact script execution started ========================");
	    contactsPage = new ContactsPage(driver);
	    //String ContactName= contactsPage.createNewContact();
	    String ContactName=  ExcelUtils.getDataByColumnName("Contacts", "Id");
	   contactsPage.SearchExistContact();
	    TestNGCustomReporter.log(logger,"======================== Create New Oppty script execution started ========================");
	    OpptyPage optypage = new OpptyPage(driver);
	    optypage.createOpty(); 
	    TestNGCustomReporter.log(logger,"======================== Create Quote page script execution started ========================");
	    quotepage = new QuotePage(driver);
	    String QuoteId=quotepage.createQuote();
	    TestNGCustomReporter.log(logger,
				"======================== Add Product page script execution started ========================");
		addproductspage = new AddProductsPage(driver);
		int ctrl = 48; // If ctrl = 14 then execute the Add bridge for the product in cart page
		addproductspage.AddProducts(ctrl); 
		TestNGCustomReporter.log(logger,
				"======================== Contact28 page script execution started ========================");
		contact28page = new Contact28Page(driver);
		contact28page.AddContact28(ContactName);
		// String ProposalName=ExcelUtils.getDataByColumnName("Quote", "Name");
		searchquotepage = new SearchQuotePage(driver);
		searchquotepage.SearchQuote(QuoteId);
		TestNGCustomReporter.log(logger,
				"======================== Generate Document page script execution started ========================");
		generateDocumentPage = new GenerateDocumentPage(driver);
		generateDocumentPage.Generate_Document();
		TestNGCustomReporter.log(logger,
				"======================== Send For Esign page script execution started ========================");
		sendesignPage = new SendEsignPage(driver);
		sendesignPage.Send_For_Esign();
		webmailLogin();
		TestNGCustomReporter.log(logger,
				"========================  Esign Process page script execution started ========================");
		esignprocesspage = new EsignProcessPage(driver);
		esignprocesspage.EsignProcess();
		TestNGCustomReporter.log(logger,
				"======================== SFDC Login script execution started ========================");
		applicationLogin();
		TestNGCustomReporter.log(logger,
				"========================  Esign Process page script execution started ========================");
		searchquotepage = new SearchQuotePage(driver);
		searchquotepage.SearchQuote(QuoteId);
		TestNGCustomReporter.log(logger,
				"========================  Esign Process page script execution started ========================");
		validateesignpage = new ValidateEsignPage(driver);
		validateesignpage.ValidateEsign();
		 
		 
	 }
	 
	 @Test(enabled = false, description = "SOC-5907 Rule for Firmsite and IM products quantity field should only allow for 1")
	  public void SOC_5907() {
	  TestNGCustomReporter.log(logger,"======================== Login Page script execution started ========================");
	  applicationLogin();
	   TestNGCustomReporter.log(logger,"======================== Accountpage script execution started ========================");
	   /* accountpage = new Accountpage(driver);
	    int ctrl1=11;
	    accountpage.SearchAccount(ctrl1);*/
	   TestNGCustomReporter.log(logger,"======================== Create New Contact script execution started ========================");
	    contactsPage = new ContactsPage(driver);
	    //String ContactName= contactsPage.createNewContact();
	    String ContactName=  ExcelUtils.getDataByColumnName("Contacts", "Id");
	   contactsPage.SearchExistContact();
	    TestNGCustomReporter.log(logger,"======================== Create New Oppty script execution started ========================");
	    OpptyPage optypage = new OpptyPage(driver);
	    optypage.createOpty(); 
	    TestNGCustomReporter.log(logger,"======================== Create Quote page script execution started ========================");
	    quotepage = new QuotePage(driver);
	    String QuoteId=quotepage.createQuote();
	    TestNGCustomReporter.log(logger,
				"======================== Add Product page script execution started ========================");
		addproductspage = new AddProductsPage(driver);
		int ctrl = 49; // If ctrl = 14 then execute the Add bridge for the product in cart page
		addproductspage.AddProducts(ctrl);  
	 }
	 
	 
}
